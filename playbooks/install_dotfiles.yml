# Install my dotfiles from source control using RCM
# This playbook is dangerous! It will overwrite any existing dotfiles
# you may have that conflict with those in lihu-dotfiles. Proceed at
# your own risk!
---
- name: Install Lihu's dotfiles
  hosts: localhost
  tasks:
    - name: Install RCM via DNF
      become: true
      when: ansible_distribution == "Fedora"
      ansible.builtin.dnf:
        name:
          - rcm
        state: latest

    - name: Install software referenced by dotfiles
      become: true
      when: ansible_distribution == "Fedora"
      ansible.builtin.dnf:
        name:
          - bat
          - fira-code-fonts
          - kitty
          - light
          - neovim
          - nodejs-bash-language-server
          - sway
          - swaylock
          - waybar
        state: latest

    - name: Check that cargo exists
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.cargo/bin/cargo"
      register: cargo_file

    # https://dev.to/ymotongpoo/run-remote-install-scripts-without-using-curl-command-in-ansible-5b6b
    - name: Fetch rustup
      ansible.builtin.uri:
        url: https://sh.rustup.rs
        return_content: yes
      register: rustup_installer
      when: not cargo_file.stat.exists

    - name: Run rustup installer
      ansible.builtin.shell:
        cmd: sh -s -- -y
        stdin: "{{ rustup_installer.content }}"
      when: not cargo_file.stat.exists

    - name: Install treesitter dependencies
      become: true
      when: ansible_distribution == "Fedora"
      ansible.builtin.dnf:
        name:
          - gcc
        state: latest

    - name: Check that treesitter exists
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.cargo/bin/tree-sitter"
      register: treesitter_file

    - name: Install treesitter cli
      ansible.builtin.command: >-
        {{ansible_env.HOME }}/.cargo/bin/cargo install tree-sitter-cli
      when: not treesitter_file.stat.exists

    - name: Check that eza exists
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.cargo/bin/eza"
      register: eza_file

    - name: Install eza
      ansible.builtin.command: >-
        {{ansible_env.HOME }}/.cargo/bin/cargo install eza
      when: not eza_file.stat.exists

    - name: Check that lua-language-server exists
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.local/bin/lua-language-server"
      register: lua_ls_file

    - name: Create lua-language-server source directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/Software/lua-language-server"
        state: directory
        mode: "0755"
      when: not lua_ls_file.stat.exists

    - name: Download lua-language-server
      ansible.builtin.unarchive:
        src: >-
          https://github.com/LuaLS/lua-language-server/releases/download/3.14.0/lua-language-server-3.14.0-linux-{{ 'arm64' if ansible_architecture == 'aarch64' else 'x86' }}.tar.gz
        remote_src: true
        dest: "{{ ansible_env.HOME }}/Software/lua-language-server/"
      when: not lua_ls_file.stat.exists

    - name: Add a lua-langague-server link in PATH
      ansible.builtin.file:
        src: "{{ ansible_env.HOME }}/Software/lua-language-server/bin/lua-language-server"
        dest: "{{ ansible_env.HOME }}/.local/bin/lua-language-server"
        state: link
      when: not lua_ls_file.stat.exists

    - name: Install rust-analyzer
      ansible.builtin.command: >-
        {{ansible_env.HOME }}/.cargo/bin/rustup component add rust-analyzer
      register: result
      changed_when: "'up to date' not in result.stderr"

    - name: Download lihu-dotfiles
      ansible.builtin.git:
        repo: git@github.com:lihu-zhong/lihu-dotfiles.git
        dest: "{{ ansible_env.HOME }}/.dotfiles"

    - name: Install Paq
      ansible.builtin.git:
        repo: git@github.com:savq/paq-nvim.git
        dest: >-
          {{ ansible_env.HOME }}/.local/share/nvim/site/pack/paqs/start/paq-nvim

    - name: Install dotfiles
      # rcm doesn't have a `-y` flag
      ansible.builtin.shell: yes | rcup -v
      register: result
      changed_when: "'->' in result.stdout"
